<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">
	<bean id="messageThreadPool" class="java.util.concurrent.ThreadPoolExecutor" destroy-method="shutdown">
		<constructor-arg index="0" value="10"/>
		<constructor-arg index="1" value="50"/>
		<constructor-arg index="2" value="0"/>
		<constructor-arg index="3" value="MILLISECONDS"/>
		<constructor-arg index="4" ref="messageQueue"/>
	</bean>
	<bean id="messageQueue" class="java.util.concurrent.LinkedBlockingQueue"/>
	
	<bean id="smsService" class="com.shanlin.p2p.app.service.impl.SmsServiceImpl">
		<constructor-arg name="serverURL" value="${sms.serverURL}"/>
		<constructor-arg name="sn" value="${sms.sn}"/>
		<constructor-arg name="pwd" value="${sms.pwd}"/>
		<property name="threadPool" ref="messageThreadPool"/>
	</bean>
	
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}"/>
		<property name="port" value="${email.port}"/>
		<property name="username" value="${email.username}"/>
		<property name="password" value="${email.password}"/>
		<property name="defaultEncoding" value="${email.defaultEncoding}"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
	</bean>
	
	<bean id="emailService" class="com.shanlin.p2p.app.service.impl.EmailServiceImpl">
		<property name="javaMailSender" ref="javaMailSender"/>
		<property name="fromEmail" value="master@myshanxing.com"/>
		<property name="threadPool" ref="messageThreadPool"/>
	</bean>
	
	<bean id="remoteInvokeService" class="com.shanlin.p2p.app.service.impl.RemoteInvokeServiceImpl">
		<property name="threadPool" ref="messageThreadPool"/>
		<property name="apiUrl" value="${remote.api_url}"/>
		<property name="publicKey" value="${remote.public_key}"/>
		<property name="invoke" value="${remote.invoke}"/>
	</bean>
</beans>